# Connection and concurrency settings
# Set the maximum number of concurrent connections to the database
max_connections = 2000

# Allow connections from any IP address
listen_addresses = '*'

# Set the maximum number of background worker processes
max_worker_processes = 16

# Set the maximum number of parallel workers that can be started by a single gather operation
max_parallel_workers_per_gather = 8

# Set the maximum number of parallel workers for the entire system
max_parallel_workers = 16

# Memory settings
# Set the amount of memory the database server uses for shared memory buffers
shared_buffers = 8GB

# Set the effective size of the cache available for the server
effective_cache_size = 24GB

# Set the amount of memory to be used for internal sort operations and hash tables
work_mem = 128MB

# Set the amount of memory to be used for maintenance operations such as VACUUM
maintenance_work_mem = 2GB

# Set the Write-Ahead Logging (WAL) level; logical allows for logical replication
wal_level = logical

# Fsync
# Disable fsync to not flush changes to disk immediately (not recommended for production)
fsync = off

# Disable synchronous commits; transactions are considered committed as soon as they are written to the WAL
synchronous_commit = off

# Disable full page writes; this reduces write amplification (not recommended for production)
full_page_writes = off

# WAL settings
# Set the size of the WAL buffers
wal_buffers = 32MB

# Set the delay between WAL writer flushes
wal_writer_delay = 100ms

# Set the maximum time between automatic WAL checkpoints
checkpoint_timeout = 10min

# Set the target completion time for a checkpoint; allows for smoother performance
checkpoint_completion_target = 0.9

# Set the maximum size of WAL files to keep
max_wal_size = 8GB

# Set the minimum size of WAL files to keep
min_wal_size = 2GB

# Disk I/O and caching
# Set the cost of random page access; lower values favor random access
random_page_cost = 1.0

# Set the number of concurrent I/O operations
effective_io_concurrency = 300

# Set the cost of sequential page access; lower values favor sequential access
seq_page_cost = 1.0

# Autovacuum Tuning
# Enable the autovacuum daemon to clean up tables
autovacuum = on

# Set the maximum number of autovacuum worker processes
autovacuum_max_workers = 6

# Set the interval between autovacuum runs
autovacuum_naptime = 30s

# Set the minimum number of updated tuples required to trigger a vacuum
autovacuum_vacuum_threshold = 500

# Set the minimum number of updated tuples required to trigger an analyze
autovacuum_analyze_threshold = 250

# Set the fraction of the total number of tuples that must be updated to trigger a vacuum
autovacuum_vacuum_scale_factor = 0.2

# Set the fraction of the total number of tuples that must be analyzed to trigger an analyze
autovacuum_analyze_scale_factor = 0.1

# Set the delay for the cost-based vacuum; reduces I/O impact
autovacuum_vacuum_cost_delay = 10ms

# Set the maximum cost limit for vacuum operations; -1 means no limit
autovacuum_vacuum_cost_limit = -1

# Statistics Collection
# Enable tracking of activity statistics for monitoring
track_activities = on

# Enable tracking of statistics on the number of tuples processed
track_counts = on

# Enable tracking of I/O timing statistics
track_io_timing = on

# Enable tracking of function calls; 'all' tracks all function calls
track_functions = all

# Connection Settings
# Set the maximum number of locks allowed per transaction
max_locks_per_transaction = 256

# Set the timeout for detecting deadlocks; if no lock is obtained within this time, it will be aborted
deadlock_timeout = 5s

# Logging settings (optional, helps with monitoring in high-load)
# Set the minimum execution time for statements to be logged; logs slow queries
log_min_duration_statement = 500

# Enable logging of checkpoints
log_checkpoints = on

# Enable logging of new connections
log_connections = on

# Enable logging of disconnections
log_disconnections = on
